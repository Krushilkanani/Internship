{"ast":null,"code":"var _jsxFileName = \"E:\\\\INTERNSHIP_SST\\\\REACT\\\\15-routing\\\\frontend\\\\src\\\\pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  if (data.isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 16\n    }, this);\n  }\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch('http://localhost:8081/events');\n  if (!response.ok) {\n    // return { isError: true, message: 'Could not fetch events.' };\n    throw new Response(JSON.stringify({\n      message: \"Could not fetch events.\"\n    }), {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","data","isError","children","message","fileName","_jsxFileName","lineNumber","columnNumber","events","_c","loader","response","fetch","ok","Response","JSON","stringify","status","$RefreshReg$"],"sources":["E:/INTERNSHIP_SST/REACT/15-routing/frontend/src/pages/Events.js"],"sourcesContent":["import { useLoaderData } from 'react-router-dom';\r\n\r\nimport EventsList from '../components/EventsList';\r\n\r\nfunction EventsPage() {\r\n    const data = useLoaderData();\r\n\r\n    if (data.isError) {\r\n        return <p>{data.message}</p>;\r\n    }\r\n\r\n    const events = data.events;\r\n\r\n    return (\r\n        <>\r\n            <EventsList events={events} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nexport async function loader() {\r\n    const response = await fetch('http://localhost:8081/events');\r\n\r\n    if (!response.ok) {\r\n        // return { isError: true, message: 'Could not fetch events.' };\r\n        throw new Response(JSON.stringify({ message: \"Could not fetch events.\" }), { status: 500 });\r\n    } else {\r\n        return response;\r\n    }\r\n}"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAEhD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,IAAI,GAAGR,aAAa,CAAC,CAAC;EAE5B,IAAIQ,IAAI,CAACC,OAAO,EAAE;IACd,oBAAON,OAAA;MAAAO,QAAA,EAAIF,IAAI,CAACG;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAChC;EAEA,MAAMC,MAAM,GAAGR,IAAI,CAACQ,MAAM;EAE1B,oBACIb,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACIP,OAAA,CAACF,UAAU;MAACe,MAAM,EAAEA;IAAO;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAChC,CAAC;AAEX;AAACR,EAAA,CAdQD,UAAU;EAAA,QACFN,aAAa;AAAA;AAAAiB,EAAA,GADrBX,UAAU;AAgBnB,eAAeA,UAAU;AAEzB,OAAO,eAAeY,MAAMA,CAAA,EAAG;EAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACd;IACA,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEb,OAAO,EAAE;IAA0B,CAAC,CAAC,EAAE;MAAEc,MAAM,EAAE;IAAI,CAAC,CAAC;EAC/F,CAAC,MAAM;IACH,OAAON,QAAQ;EACnB;AACJ;AAAC,IAAAF,EAAA;AAAAS,YAAA,CAAAT,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
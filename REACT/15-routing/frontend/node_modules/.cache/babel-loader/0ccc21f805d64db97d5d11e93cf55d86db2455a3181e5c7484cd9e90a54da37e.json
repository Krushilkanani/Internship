{"ast":null,"code":"var _jsxFileName = \"E:\\\\INTERNSHIP_SST\\\\REACT\\\\15-routing\\\\frontend\\\\src\\\\pages\\\\NewEvent.js\";\nimport { redirect } from 'react-router-dom';\nimport EventForm from '../components/EventForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 12\n  }, this);\n}\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function action({\n  request,\n  params\n}) {\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  const response = await fetch('http://localhost:8081/events', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  console.log(JSON.stringify(eventData));\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: \"could not save event.\"\n    }), {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["redirect","EventForm","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","method","headers","body","JSON","stringify","console","log","ok","Response","message","status","$RefreshReg$"],"sources":["E:/INTERNSHIP_SST/REACT/15-routing/frontend/src/pages/NewEvent.js"],"sourcesContent":["import { redirect } from 'react-router-dom';\r\nimport EventForm from '../components/EventForm';\r\n\r\nfunction NewEventPage() {\r\n    return <EventForm />;\r\n}\r\n\r\nexport default NewEventPage;\r\n\r\nexport async function action({ request, params }) {\r\n    const data = await request.formData();\r\n\r\n    const eventData = {\r\n        title: data.get('title'),\r\n        image: data.get('image'),\r\n        date: data.get('date'),\r\n        description: data.get('description'),\r\n    };\r\n\r\n    const response = await fetch('http://localhost:8081/events', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(eventData),\r\n    });\r\n\r\n\r\n    console.log(JSON.stringify(eventData));\r\n\r\n    if (!response.ok) {\r\n        throw new Response(JSON.stringify({ message: \"could not save event.\" }), { status: 500 });\r\n    }\r\n\r\n    return redirect('/events');\r\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,YAAYA,CAAA,EAAG;EACpB,oBAAOD,OAAA,CAACF,SAAS;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACxB;AAACC,EAAA,GAFQL,YAAY;AAIrB,eAAeA,YAAY;AAE3B,OAAO,eAAeM,MAAMA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EAC9C,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EAErC,MAAMC,SAAS,GAAG;IACdC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACvC,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IACzDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS;EAClC,CAAC,CAAC;EAGFa,OAAO,CAACC,GAAG,CAACH,IAAI,CAACC,SAAS,CAACZ,SAAS,CAAC,CAAC;EAEtC,IAAI,CAACM,QAAQ,CAACS,EAAE,EAAE;IACd,MAAM,IAAIC,QAAQ,CAACL,IAAI,CAACC,SAAS,CAAC;MAAEK,OAAO,EAAE;IAAwB,CAAC,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAC7F;EAEA,OAAOjC,QAAQ,CAAC,SAAS,CAAC;AAC9B;AAAC,IAAAS,EAAA;AAAAyB,YAAA,CAAAzB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}